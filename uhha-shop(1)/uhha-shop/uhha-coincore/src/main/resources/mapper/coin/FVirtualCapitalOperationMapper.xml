<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.uhha.coin.capital.mapper.FVirtualCapitalOperationMapper">
  <resultMap id="BaseResultMap" type="io.uhha.coin.capital.domain.FVirtualCapitalOperation">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="fuid" jdbcType="INTEGER" property="fuid" />
    <result column="fcoinid" jdbcType="INTEGER" property="fcoinid" />
    <result column="fcreatetime" jdbcType="TIMESTAMP" property="fcreatetime" />
    <result column="famount" jdbcType="DECIMAL" property="famount" />
    <result column="ffees" jdbcType="DECIMAL" property="ffees" />
    <result column="fbtcfees" jdbcType="DECIMAL" property="fbtcfees" />
	<result column="fadminid" jdbcType="BIGINT" property="fadminid" />
    <result column="ftype" jdbcType="INTEGER" property="ftype" />
    <result column="fstatus" jdbcType="INTEGER" property="fstatus" />
    <result column="fupdatetime" jdbcType="TIMESTAMP" property="fupdatetime" />
    <result column="fwithdrawaddress" jdbcType="VARCHAR" property="fwithdrawaddress" />
    <result column="frechargeaddress" jdbcType="VARCHAR" property="frechargeaddress" />
    <result column="funiquenumber" jdbcType="VARCHAR" property="funiquenumber" />
    <result column="fconfirmations" jdbcType="INTEGER" property="fconfirmations" />
    <result column="fhasowner" jdbcType="BIT" property="fhasowner" />
    <result column="fblocknumber" jdbcType="INTEGER" property="fblocknumber" />
    <result column="version" jdbcType="INTEGER" property="version" />
	  <result column="fplatform" jdbcType="INTEGER" property="fplatform" />
  </resultMap>
  
  <sql id="operationColumn">fid, fuid, fcoinid, fcreatetime, famount, ffees, ftype, fstatus, fupdatetime, 
    fwithdrawaddress, frechargeaddress, funiquenumber, fconfirmations, fhasowner,fbtcfees, fadminid,
    fblocknumber, version, fsource, fplatform</sql>
  
  <select id="getPageVirtualCapitalOperation" resultType="io.uhha.coin.capital.domain.FVirtualCapitalOperation" parameterType="java.util.Map">
   	select <include refid="operationColumn" />
    from f_virtual_capital_operation
    where 
    	fuid = #{fuid,jdbcType=BIGINT}
	  <if test="fcoinid != null">
		  and fcoinid = #{fcoinid,jdbcType=INTEGER}
	  </if>
    <if test="begindate != null">
   		<![CDATA[and DATE_FORMAT(fcreatetime,"%Y-%m-%d") >= #{begindate,jdbcType=VARCHAR}]]>
    </if>
    <if test="enddate != null">
   		<![CDATA[and DATE_FORMAT(fcreatetime,"%Y-%m-%d") <= #{enddate,jdbcType=VARCHAR}]]>
    </if>
	<if test="ftype != null">
		  and ftype = #{ftype,jdbcType=INTEGER}
	</if>
    order by fcreatetime desc
    limit #{offset},#{limit}
  </select>
  
  <select id="countVirtualCapitalOperation" resultType="java.lang.Integer" parameterType="java.util.Map">
   	select count(fid)
    from f_virtual_capital_operation
    where
    	fuid = #{fuid,jdbcType=BIGINT}
    <if test="fcoinid != null">
    	and fcoinid = #{fcoinid,jdbcType=INTEGER}
    </if>
    <if test="begindate != null">
   		<![CDATA[and DATE_FORMAT(fcreatetime,"%Y-%m-%d") >= #{begindate,jdbcType=VARCHAR}]]>
    </if>
    <if test="enddate != null">
   		<![CDATA[and DATE_FORMAT(fcreatetime,"%Y-%m-%d") <= #{enddate,jdbcType=VARCHAR}]]>
    </if>
   <if test="fstatus != null">
    	and fstatus = #{fstatus,jdbcType=INTEGER}
    </if>
	<if test="ftype != null">
		and ftype = #{ftype,jdbcType=INTEGER}
	</if>
  </select>
  
  <select id="getVirtualWalletWithdrawTimes" resultType="java.lang.Integer" parameterType="java.lang.Long">
   	select count(fid)
    from f_virtual_capital_operation
    where 
    	fuid = #{fuid,jdbcType=BIGINT} and
    	ftype = 2 and 
    	DATE_FORMAT(fcreatetime,"%Y-%m-%d") = DATE_FORMAT(now(),"%Y-%m-%d")
  </select>
  
  <select id="selectOneByTxid" resultType="io.uhha.coin.capital.domain.FVirtualCapitalOperation">
   	select <include refid="operationColumn" /> from f_virtual_capital_operation where funiquenumber = #{funiquenumber}
  </select>

	<select id="selectMoreByTxid" resultType="io.uhha.coin.capital.domain.FVirtualCapitalOperation">
		select <include refid="operationColumn" /> from f_virtual_capital_operation where funiquenumber = #{funiquenumber}
	</select>
  
  <!-- Base -->
  
  <insert id="insert" parameterType="io.uhha.coin.capital.domain.FVirtualCapitalOperation" keyProperty="fid">
    insert into f_virtual_capital_operation (
    	fuid, 
    	fcoinid, 
      	fcreatetime, 
      	famount, 
      	ffees,
      	fbtcfees,
		fadminid,
      	ftype, 
      	fstatus, 
      	fupdatetime, 
      	fwithdrawaddress, 
      	f_address_withdraw_id,
      	frechargeaddress,
      	funiquenumber, 
      	fconfirmations,  
      	fhasowner, 
      	fblocknumber, 
      	version,
      	fsource,
      	fplatform)
    values (
    	#{fuid,jdbcType=BIGINT},
    	#{fcoinid,jdbcType=INTEGER}, 
      	#{fcreatetime,jdbcType=TIMESTAMP}, 
      	#{famount,jdbcType=DECIMAL}, 
      	#{ffees,jdbcType=DECIMAL}, 
      	#{fbtcfees,jdbcType=DECIMAL},
		#{fadminid,jdbcType=BIGINT},
		#{ftype,jdbcType=INTEGER},
      	#{fstatus,jdbcType=INTEGER}, 
      	#{fupdatetime,jdbcType=TIMESTAMP}, 
      	#{fwithdrawaddress,jdbcType=VARCHAR}, 
      	#{faddressWithdrawId,jdbcType=VARCHAR},
      	#{frechargeaddress,jdbcType=VARCHAR},
      	#{funiquenumber,jdbcType=VARCHAR}, 
      	#{fconfirmations,jdbcType=INTEGER},  
      	#{fhasowner,jdbcType=BIT}, 
      	#{fblocknumber,jdbcType=INTEGER}, 
      	#{version,jdbcType=INTEGER},
      	#{fsource,jdbcType=INTEGER},
      	#{fplatform,jdbcType=INTEGER}
    )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="io.uhha.coin.capital.domain.FVirtualCapitalOperation">
    update f_virtual_capital_operation
    set 
    	fuid = #{fuid,jdbcType=BIGINT},
      	fcoinid = #{fcoinid,jdbcType=INTEGER},
      	fcreatetime = #{fcreatetime,jdbcType=TIMESTAMP},
      	famount = #{famount,jdbcType=DECIMAL},
      	ffees = #{ffees,jdbcType=DECIMAL},
      	fbtcfees = #{fbtcfees,jdbcType=DECIMAL},
		fadminid = #{fadminid,jdbcType=BIGINT},
      	ftype = #{ftype,jdbcType=INTEGER},
      	fstatus = #{fstatus,jdbcType=INTEGER},
      	fupdatetime = #{fupdatetime,jdbcType=TIMESTAMP},
      	fwithdrawaddress = #{fwithdrawaddress,jdbcType=VARCHAR},
      	frechargeaddress = #{frechargeaddress,jdbcType=VARCHAR},
      	funiquenumber = #{funiquenumber,jdbcType=VARCHAR},
      	fconfirmations = #{fconfirmations,jdbcType=INTEGER},
      	fhasowner = #{fhasowner,jdbcType=BIT},
      	fblocknumber = #{fblocknumber,jdbcType=INTEGER},
      	version = version + 1,
      	fsource = #{fsource,jdbcType=INTEGER},
      	fplatform = #{fplatform,jdbcType=INTEGER}
    where 
    	fid = #{fid,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="operationColumn" />
    from f_virtual_capital_operation
    where 
    	fid = #{fid,jdbcType=INTEGER}
  </select>

	<select id="getTotalAmountByType" resultType="java.math.BigDecimal" parameterType="java.util.Map">
		select ifnull(sum(ifnull(famount,0) + ifnull(ffees,0) + ifnull(fbtcfees,0)),0)
		from
		f_virtual_capital_operation
		where fstatus = 3
		<if test="fuid != null">
			and fuid = #{fuid}
		</if>
		<if test="coinid != null">
			and fcoinid = #{coinid}
		</if>
		<if test="type != null">
			and ftype = #{type}
		</if>
		<if test="start != null">
			<![CDATA[and fcreatetime >= #{start,jdbcType=VARCHAR}]]>
		</if>
		<if test="end != null">
			<![CDATA[and fcreatetime <= #{end,jdbcType=VARCHAR}]]>
		</if>
	</select>


	<select id="getAdminPageList" resultType="FVirtualCapitalOperation" parameterType="java.util.Map">
		select
		f_virtual_capital_operation.fid,
		f_virtual_capital_operation.fuid,
		f_virtual_capital_operation.fcoinid,
		f_virtual_capital_operation.fcreatetime,
		f_virtual_capital_operation.famount,
		f_virtual_capital_operation.ffees,
		f_virtual_capital_operation.fbtcfees,
		f_virtual_capital_operation.fadminid,
		f_virtual_capital_operation.ftype,
		f_virtual_capital_operation.fstatus,
		f_virtual_capital_operation.fupdatetime,
		f_virtual_capital_operation.fwithdrawaddress,
		f_virtual_capital_operation.frechargeaddress,
		f_virtual_capital_operation.funiquenumber,
		f_virtual_capital_operation.fconfirmations,
		f_virtual_capital_operation.fhasowner,
		f_virtual_capital_operation.fblocknumber,
		f_virtual_capital_operation.version,
		f_virtual_capital_operation.fsource,
		f_virtual_capital_operation.fplatform,
		ums_member.username,
		ums_member.nickname,
		concat(ums_member.firstname,' ',ums_member.lastname) frealname,
		system_coin_type.name fcoinname
		from
		f_virtual_capital_operation left join
		ums_member on ums_member.id = f_virtual_capital_operation.fuid left join
		system_coin_type on system_coin_type.id = f_virtual_capital_operation.fcoinid left join
		sys_user on sys_user.user_id = f_virtual_capital_operation.fadminid
		where 1=1 and fuid is not null
		<if test="keyword != null">
			and (
			f_virtual_capital_operation.fwithdrawaddress like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			f_virtual_capital_operation.frechargeaddress like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.username like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.nickname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.email like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.mobile like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.firstname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.lastname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.id = #{keyword,jdbcType=VARCHAR}
			)
		</if>
		<if test="fcoinid != null">
			and f_virtual_capital_operation.fcoinid = #{fcoinid}
		</if>
		<if test="ftype != null">
			and f_virtual_capital_operation.ftype = #{ftype}
		</if>
		<if test="fstatus != null">
			and f_virtual_capital_operation.fstatus in
			<foreach collection="fstatus" item="item" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="start != null and start == end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime = #{start}]]>
		</if>
		<if test="start != null and start != end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime >= #{start}]]>
		</if>
		<if test="end != null and start != end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime <= #{end}]]>
		</if>
		<if test="orderField != null">
			order by f_virtual_capital_operation.${orderField} ${orderDirection}
		</if>
		limit #{offset},#{limit}
	</select>

	<select id="countAdminPage" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from
		f_virtual_capital_operation left join
		ums_member on ums_member.id = f_virtual_capital_operation.fuid left join
		system_coin_type on system_coin_type.id = f_virtual_capital_operation.fcoinid
		where 1=1 and fuid is not null
		<if test="keyword != null">
			and (
			f_virtual_capital_operation.fwithdrawaddress like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			f_virtual_capital_operation.frechargeaddress like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.username like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.nickname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.email like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.mobile like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.firstname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.lastname like concat('%',#{keyword,jdbcType=VARCHAR},'%') or
			ums_member.id = #{keyword,jdbcType=VARCHAR}
			)
		</if>
		<if test="fcoinid != null">
			and f_virtual_capital_operation.fcoinid = #{fcoinid}
		</if>
		<if test="ftype != null">
			and f_virtual_capital_operation.ftype = #{ftype}
		</if>
		<if test="fstatus != null">
			and f_virtual_capital_operation.fstatus in
			<foreach collection="fstatus" item="item" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="start != null and start == end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime = #{start}]]>
		</if>
		<if test="start != null and start != end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime >= #{start}]]>
		</if>
		<if test="end != null and start != end">
			<![CDATA[and f_virtual_capital_operation.fupdatetime <= #{end}]]>
		</if>
	</select>


	<select id="selectAllById" resultType="FVirtualCapitalOperation" parameterType="java.lang.Integer">
		select
			f_virtual_capital_operation.fid,
			f_virtual_capital_operation.fuid,
			f_virtual_capital_operation.fcoinid,
			f_virtual_capital_operation.fcreatetime,
			f_virtual_capital_operation.famount,
			f_virtual_capital_operation.ffees,
			f_virtual_capital_operation.fbtcfees,
			f_virtual_capital_operation.fadminid,
			f_virtual_capital_operation.ftype,
			f_virtual_capital_operation.fstatus,
			f_virtual_capital_operation.fupdatetime,
			f_virtual_capital_operation.fwithdrawaddress,
			f_virtual_capital_operation.f_address_withdraw_id faddressWithdrawId,
			f_virtual_capital_operation.frechargeaddress,
			f_virtual_capital_operation.funiquenumber,
			f_virtual_capital_operation.fconfirmations,
			f_virtual_capital_operation.fhasowner,
			f_virtual_capital_operation.fblocknumber,
			f_virtual_capital_operation.version,
			f_virtual_capital_operation.fsource,
			f_virtual_capital_operation.fplatform,
			ums_member.username,
			ums_member.nickname,
			concat(ums_member.firstname,' ',ums_member.lastname) realName,
			system_coin_type.name fcoinname
		from
			f_virtual_capital_operation left join
			ums_member on ums_member.id = f_virtual_capital_operation.fuid left join
			system_coin_type on system_coin_type.id = f_virtual_capital_operation.fcoinid left join
			sys_user on sys_user.user_id = f_virtual_capital_operation.fadminid
		where
			f_virtual_capital_operation.fid=#{fid}
	</select>

	<select id="seletcGoing" resultType="io.uhha.coin.capital.domain.FVirtualCapitalOperation" >
		select <include refid="operationColumn" /> from f_virtual_capital_operation where
		<![CDATA[fhasowner = 1 and ftype = 1 and fcoinid = #{fcoinid} and fstatus != 3 and fconfirmations < #{fconfirmations}]]>
	</select>
</mapper>